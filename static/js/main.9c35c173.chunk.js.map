{"version":3,"sources":["Model.tsx","Upload.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Model","gltf","useEffect","console","log","scene","useGLTF","object","Upload","callback","type","onChange","event","blob","URL","createObjectURL","target","files","Loader","progress","useProgress","Html","center","App","useState","file","setFile","style","height","width","display","backgroundColor","flex","intensity","fallback","OrbitControls","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAYeA,MATf,YAA4C,IAA3BC,EAA0B,EAA1BA,KACfC,qBAAU,WACRC,QAAQC,IAAI,KAAMH,GAClBE,QAAQC,IAAI,QAASC,MAHkB,IAKjCA,EAAUC,YAAQL,GAAlBI,MACR,OAAO,2BAAWE,OAAQF,KCSbG,MAhBf,YAAoC,IAAlBC,EAAiB,EAAjBA,SAShB,OACE,8BACE,uBAAOC,KAAK,OAAOC,SAVF,SAACC,GACpB,GAAIA,EAAO,CACTT,QAAQC,IAAIQ,GACZ,IAAMC,EAAOC,IAAIC,gBAAgBH,EAAMI,OAAOC,MAAO,IACrDR,EAASI,UCAf,SAASK,IAAU,IACTC,EAAaC,cAAbD,SACR,OAAO,eAACE,EAAA,EAAD,CAAMC,QAAM,EAAZ,UAAcH,EAAd,eA6BMI,MA1Bf,WACE,IADa,EAMWC,mBAAiB,aAN5B,mBAMNC,EANM,KAMAC,EANA,KAQb,OACE,sBAAKC,MAAO,CAAEC,OAAQ,QAASC,MAAO,QAASC,QAAS,QAAxD,UACE,qBAAKH,MAAO,CAAEE,MAAO,MAAOE,gBAAiB,aAA7C,SACE,cAAC,EAAD,CAAQtB,SAVO,SAACI,GACpBV,QAAQC,IAAI,CAAES,SACda,GAAQ,kBAAMb,UAUZ,qBAAKc,MAAO,CAAEK,KAAM,GAApB,SACE,eAAC,IAAD,WACE,8BAAcC,UAAW,IACzB,eAAC,WAAD,CAAUC,SAAU,cAAChB,EAAD,IAApB,UACE,cAAC,EAAD,CAAOjB,KAAMwB,GAAWA,GACxB,cAACU,EAAA,EAAD,gBClBGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9c35c173.chunk.js","sourcesContent":["import { useGLTF } from \"@react-three/drei\";\nimport { useEffect } from \"react\";\n\nfunction Model({ gltf }: { gltf: string }) {\n  useEffect(() => {\n    console.log(\"hi\", gltf);\n    console.log(\"scene\", scene);\n  });\n  const { scene } = useGLTF(gltf);\n  return <primitive object={scene} />;\n}\n\nexport default Model;\n","import React, { useState } from \"react\";\n\nfunction Upload({ callback }: any) {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event) {\n      console.log(event);\n      const blob = URL.createObjectURL(event.target.files![0]);\n      callback(blob);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleChange} />\n    </div>\n  );\n}\n\nexport default Upload;\n","import { Html, OrbitControls, useGLTF, useProgress } from \"@react-three/drei\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { useEffect } from \"react\";\nimport { Suspense, useState } from \"react\";\nimport Model from \"./Model\";\nimport Upload from \"./Upload\";\n\nfunction Loader() {\n  const { progress } = useProgress();\n  return <Html center>{progress} % loaded</Html>;\n}\n\nfunction App() {\n  const handleUpload = (blob: string) => {\n    console.log({ blob });\n    setFile(() => blob);\n  };\n\n  const [file, setFile] = useState<string>(\"./Fox.glb\");\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100vw\", display: \"flex\" }}>\n      <div style={{ width: \"20%\", backgroundColor: \"lightgrey\" }}>\n        <Upload callback={handleUpload} />\n      </div>\n      <div style={{ flex: 1 }}>\n        <Canvas>\n          <ambientLight intensity={1} />\n          <Suspense fallback={<Loader />}>\n            <Model gltf={file} key={file} />\n            <OrbitControls />\n          </Suspense>\n        </Canvas>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
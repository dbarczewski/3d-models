{"version":3,"sources":["Modal.tsx","Model.tsx","UploadButton.tsx","App.tsx","index.tsx"],"names":["Modal","show","onClose","className","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","href","Model","gltf","scene","useGLTF","object","UploadButton","callback","type","onChange","event","blob","URL","createObjectURL","target","files","accept","Loader","progress","useProgress","Html","center","App","control","useRef","useState","file","setFile","showModal","setShowModal","camera","position","intensity","fallback","OrbitControls","ref","current","reset","console","log","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKA2EeA,MAtEf,YAAsD,IAAD,IAApCC,YAAoC,SAAvBC,EAAuB,EAAvBA,QAC5B,OAAKD,EAEH,qBAAKE,UAAU,yDAAf,SACE,sBAAKA,UAAU,sHAAf,UACE,wBACEA,UAAU,uDACVC,QAASF,EAFX,SAIE,qBACEG,MAAM,6BACNF,UAAU,UACVG,KAAK,OACLC,QAAQ,YACRC,OAAO,eALT,SAOE,sBACEC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,6EAIR,sBAAKT,UAAU,wCAAf,UACE,8BACE,oBAAIA,UAAU,yBAAd,wBAEF,qBAAKA,UAAU,0CAAf,SACE,qEAEE,uBAFF,2KAME,uBANF,mBAOkB,2CAPlB,kBAQE,2CARF,SAUE,uBAVF,sEAaE,4BAGJ,8BACE,wBACEC,QAASF,EACTC,UAAU,uCAFZ,kBAOF,8BACE,mBAAGA,UAAU,UAAb,SACE,iDAEE,mBAAGU,KAAK,qDAAR,0BAFF,wCAtDM,M,QCCLC,MALf,YAA4C,IAA3BC,EAA0B,EAA1BA,KACPC,EAAUC,YAAQF,GAAM,GAAxBC,MACR,OAAO,2BAAWE,OAAQF,KC6BbG,MAjCf,YAA0C,IAAlBC,EAAiB,EAAjBA,SAQtB,OACE,qBAAKjB,UAAU,uDAAf,SACE,wBAAOA,UAAU,oJAAjB,UACE,qBACEA,UAAU,UACVG,KAAK,eACLD,MAAM,6BACNE,QAAQ,YAJV,SAME,sBAAMK,EAAE,+IAEV,sBAAMT,UAAU,gCAAhB,kCAGA,uBACEkB,KAAK,OACLlB,UAAU,SACVmB,SAxBa,SAACC,GACpB,GAAIA,EAAO,CACT,IAAMC,EAAOC,IAAIC,gBAAgBH,EAAMI,OAAOC,MAAO,IACrDR,EAASI,KAsBLK,OAAO,eClBjB,SAASC,IAAU,IACTC,EAAaC,cAAbD,SACR,OAAO,eAACE,EAAA,EAAD,CAAMC,QAAM,EAAZ,UAAcH,EAAd,eAkCMI,IA/Bf,WACE,IAOMC,EAAUC,iBAAO,MARV,EASWC,mBAAiB,aAT5B,mBASNC,EATM,KASAC,EATA,OAUqBF,oBAAS,GAV9B,mBAUNG,EAVM,KAUKC,EAVL,KAYb,OACE,sBAAKvC,UAAU,yBAAf,UACE,qBAAKA,UAAU,SAAf,SACE,eAAC,IAAD,CAAQwC,OAAQ,CAAEC,SAAU,CAAC,IAAK,GAAI,MAAtC,UACE,8BAAcC,UAAW,IACzB,eAAC,WAAD,CAAUC,SAAU,cAAChB,EAAD,IAApB,UACE,cAAC,EAAD,CAAOf,KAAMwB,GAAWA,GACxB,cAACQ,EAAA,EAAD,CAAeC,IAAKZ,YAI1B,qBAAKjC,UAAU,wBAAf,SACE,cAAC,EAAD,CAAQiB,SAvBO,SAACI,GACpBgB,GAAQ,kBAAMhB,KACVY,GACDA,EAAQa,QAAgBC,aAsBzB,cAAC,EAAD,CAAOjD,KAAMwC,EAAWvC,QAAS,kBAAMwC,GAAa,W,gCCvC1D,+EAKAS,QAAQC,IAAIC,GAEZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.091935eb.chunk.js","sourcesContent":["type ModalProps = {\n  show?: boolean;\n  onClose?: () => void;\n};\n\nfunction Modal({ show = true, onClose }: ModalProps) {\n  if (!show) return null;\n  return (\n    <div className=\"absolute top-0 left-0 w-screen h-screen bg-gray-900/50\">\n      <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-1/2 h-1/2 bg-gray-900 text-gray-100 rounded\">\n        <button\n          className=\"text-red-600 p-2 rounded-full absolute top-2 right-2\"\n          onClick={onClose}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n        </button>\n        <div className=\"flex flex-col h-full text-center py-4\">\n          <div>\n            <h1 className=\"text-5xl text-gray-100\">Foreword</h1>\n          </div>\n          <div className=\"flex-1 flex justify-center items-center\">\n            <p>\n              This is an app to display 3D models.\n              <br />\n              By clicking and moving the mouse, you can rotate the camera. If\n              you scroll, you can zoom in or out. You can choose your own 3D\n              model, but only .glb formats are allowed.\n              <br />\n              The models will <strong> not </strong>be uploaded and\n              <strong> not </strong>\n              saved.\n              <br />\n              Depending on the size of the model, you may need to zoom in or\n              out.\n              <br />\n            </p>\n          </div>\n          <div>\n            <button\n              onClick={onClose}\n              className=\"px-4 py-2 mb-4 bg-green-500 rounded \"\n            >\n              OK\n            </button>\n          </div>\n          <div>\n            <p className=\"text-sm\">\n              <span>\n                Thanks to&nbsp;\n                <a href=\"https://github.com/KhronosGroup/glTF-Sample-Models\">\n                  KhronosGroup\n                </a>\n                &nbsp;for the fox model.\n              </span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","import { useGLTF } from \"@react-three/drei\";\n\nfunction Model({ gltf }: { gltf: string }) {\n  const { scene } = useGLTF(gltf, true);\n  return <primitive object={scene} />;\n}\n\nexport default Model;\n","function UploadButton({ callback }: any) {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event) {\n      const blob = URL.createObjectURL(event.target.files![0]);\n      callback(blob);\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-center bg-grey-lighter m-2\">\n      <label className=\"w-64 flex flex-col items-center px-4 py-6 bg-gray-700 text-gray-100 rounded-lg shadow-lg tracking-wide uppercase cursor-pointer hover:bg-gray-800\">\n        <svg\n          className=\"w-8 h-8\"\n          fill=\"currentColor\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n        >\n          <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\n        </svg>\n        <span className=\"mt-2 text-base leading-normal\">\n          Select your 3d-Model\n        </span>\n        <input\n          type=\"file\"\n          className=\"hidden\"\n          onChange={handleChange}\n          accept=\".glb\"\n        />\n      </label>\n    </div>\n  );\n}\n\nexport default UploadButton;\n","import { Html, OrbitControls, useProgress } from \"@react-three/drei\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { useRef } from \"react\";\nimport { Suspense, useState } from \"react\";\nimport Modal from \"./Modal\";\nimport Model from \"./Model\";\nimport Upload from \"./UploadButton\";\n\nfunction Loader() {\n  const { progress } = useProgress();\n  return <Html center>{progress} % loaded</Html>;\n}\n\nfunction App() {\n  const handleUpload = (blob: string) => {\n    setFile(() => blob);\n    if (control) {\n      (control.current as any).reset();\n    }\n  };\n\n  const control = useRef(null);\n  const [file, setFile] = useState<string>(\"./Fox.glb\");\n  const [showModal, setShowModal] = useState(true);\n\n  return (\n    <div className=\"w-screen h-screen flex\">\n      <div className=\"flex-1\">\n        <Canvas camera={{ position: [150, 15, 150] }}>\n          <ambientLight intensity={1} />\n          <Suspense fallback={<Loader />}>\n            <Model gltf={file} key={file} />\n            <OrbitControls ref={control} />\n          </Suspense>\n        </Canvas>\n      </div>\n      <div className=\"absolute top-2 left-2\">\n        <Upload callback={handleUpload} />\n      </div>\n      <Modal show={showModal} onClose={() => setShowModal(false)} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconsole.log(process);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}